type MonoPayErrorConfig = {
    isIPGError: boolean;
    isSafeToDisplay: boolean;
    message?: string;
    code?: string;
};
export declare abstract class MonopayError extends Error {
    readonly isIPGError: boolean;
    readonly isSafeToDisplay: boolean;
    readonly code?: string;
    constructor(options: MonoPayErrorConfig);
}
export declare class BadConfigError extends MonopayError {
    constructor(details: {
        message: string;
        code?: string;
        isIPGError: boolean;
    });
}
export declare class UserError extends MonopayError {
    constructor(details?: {
        message?: string;
        code?: string;
    });
}
export declare class GatewayFailureError extends MonopayError {
    constructor(details?: {
        message?: string;
        code?: string;
    });
}
export {};
