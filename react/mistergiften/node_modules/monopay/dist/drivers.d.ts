export type { BehpardakhtAPI, BehpardakhtDriver } from './drivers/behpardakht';
export type { IdpayAPI, IdpayDriver } from './drivers/idpay';
export type { NextpayAPI, NextpayDriver } from './drivers/nextpay';
export type { ParsianAPI, ParsianDriver } from './drivers/parsian';
export type { PasargadAPI, PasargadDriver } from './drivers/pasargad';
export type { PayirAPI, PayirDriver } from './drivers/payir';
export type { PaypingAPI, PaypingDriver } from './drivers/payping';
export type { SadadAPI, SadadDriver } from './drivers/sadad';
export type { SamanAPI, SamanDriver } from './drivers/saman';
export type { VandarAPI, VandarDriver } from './drivers/vandar';
export type { ZarinpalAPI, ZarinpalDriver } from './drivers/zarinpal';
export type { ZibalAPI, ZibalDriver } from './drivers/zibal';
export declare const drivers: {
    behpardakht: (config: Omit<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
        terminalId: number;
        username: string;
        password: string;
    } & {}, "links"> & Partial<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
    }>) => {
        request: (options: {
            payerId?: number | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verify: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
        requestPayment: (options: {
            payerId?: number | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verifyPayment: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
    };
    idpay: (config: Omit<{
        sandbox?: boolean | null | undefined;
        links: {
            request: string;
            verify: string;
        };
        apiKey: string;
    } & {}, "links"> & Partial<{
        links: {
            request: string;
            verify: string;
        };
    }>) => {
        request: (options: {
            mobile?: string | undefined;
            email?: string | undefined;
            name?: string | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verify: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
        requestPayment: (options: {
            mobile?: string | undefined;
            email?: string | undefined;
            name?: string | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verifyPayment: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
    };
    nextpay: (config: Omit<{
        apiKey?: string | undefined;
        links: {
            request: string;
            verify: string;
            payment: string;
        };
    } & {}, "links"> & Partial<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
    }>) => {
        request: (options: {
            mobile?: string | undefined;
            customFields?: Record<string, string> | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verify: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
        requestPayment: (options: {
            mobile?: string | undefined;
            customFields?: Record<string, string> | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verifyPayment: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
    };
    parsian: (config: Omit<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
        merchantId: string;
    } & {}, "links"> & Partial<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
    }>) => {
        request: (options: {} & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verify: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
        requestPayment: (options: {} & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verifyPayment: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
    };
    pasargad: (config: Omit<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
        terminalId: string;
        merchantId: string;
        privateKeyXMLFile: string;
    } & {}, "links"> & Partial<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
    }>) => {
        request: (options: {
            mobile?: string | undefined;
            email?: string | undefined;
            invoiceNumber: string;
            invoiceDate: string;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verify: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
        requestPayment: (options: {
            mobile?: string | undefined;
            email?: string | undefined;
            invoiceNumber: string;
            invoiceDate: string;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verifyPayment: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
    };
    payfa: (config: Omit<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
        apiKey: string;
    } & {}, "links"> & Partial<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
    }>) => {
        request: (options: {
            mobileNumber?: string | undefined;
            invoiceId?: string | undefined;
            cardNumber?: string | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verify: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
        requestPayment: (options: {
            mobileNumber?: string | undefined;
            invoiceId?: string | undefined;
            cardNumber?: string | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verifyPayment: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
    };
    payir: (config: Omit<{
        sandbox?: boolean | undefined;
        links: {
            request: string;
            verify: string;
            payment: string;
        };
        apiKey: string;
    } & {}, "links"> & Partial<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
    }>) => {
        request: (options: {
            mobile?: string | undefined;
            nationalCode?: string | undefined;
            validCardNumber?: string | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verify: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
        requestPayment: (options: {
            mobile?: string | undefined;
            nationalCode?: string | undefined;
            validCardNumber?: string | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verifyPayment: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
    };
    payping: (config: Omit<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
        apiKey: string;
    } & {}, "links"> & Partial<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
    }>) => {
        request: (options: {
            mobile?: string | undefined;
            email?: string | undefined;
            name?: string | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verify: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
        requestPayment: (options: {
            mobile?: string | undefined;
            email?: string | undefined;
            name?: string | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verifyPayment: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
    };
    sadad: (config: Omit<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
        terminalId: string;
        merchantId: string;
        terminalKey: string;
    } & {}, "links"> & Partial<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
    }>) => {
        request: (options: {
            mobile?: string | undefined;
            multiplexingData?: {
                Type: "Percentage" | "Amount";
                MultiplexingRows: {
                    IbanNumber: number;
                    Value: number;
                }[];
            } | undefined;
            appName?: string | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verify: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
        requestPayment: (options: {
            mobile?: string | undefined;
            multiplexingData?: {
                Type: "Percentage" | "Amount";
                MultiplexingRows: {
                    IbanNumber: number;
                    Value: number;
                }[];
            } | undefined;
            appName?: string | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verifyPayment: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
    };
    saman: (config: Omit<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
        merchantId: string;
    } & {}, "links"> & Partial<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
    }>) => {
        request: (options: {
            mobile?: string | undefined;
            wage?: number | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verify: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
        requestPayment: (options: {
            mobile?: string | undefined;
            wage?: number | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verifyPayment: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
    };
    vandar: (config: Omit<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
        api_key: string;
    } & {}, "links"> & Partial<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
    }>) => {
        request: (options: {
            description?: string | undefined;
            mobile_number?: string | undefined;
            factorNumber?: string | undefined;
            valid_card_number?: string | undefined;
            comment?: string | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verify: (options: {
            message?: string | undefined;
            status?: number | undefined;
            description?: string | undefined;
            mobile?: string | undefined;
            cardNumber?: string | undefined;
            wage?: string | undefined;
            factorNumber?: string | undefined;
            realAmount?: number | undefined;
            transId?: number | undefined;
            paymentDate?: string | undefined;
            cid?: string | undefined;
            errors?: string[] | undefined;
        } & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
        requestPayment: (options: {
            description?: string | undefined;
            mobile_number?: string | undefined;
            factorNumber?: string | undefined;
            valid_card_number?: string | undefined;
            comment?: string | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verifyPayment: (options: {
            message?: string | undefined;
            status?: number | undefined;
            description?: string | undefined;
            mobile?: string | undefined;
            cardNumber?: string | undefined;
            wage?: string | undefined;
            factorNumber?: string | undefined;
            realAmount?: number | undefined;
            transId?: number | undefined;
            paymentDate?: string | undefined;
            cid?: string | undefined;
            errors?: string[] | undefined;
        } & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
    };
    zarinpal: (config: Omit<{
        sandbox?: boolean | undefined;
        links: {
            request: string;
            verify: string;
            payment: string;
        };
        merchantId: string;
    } & {}, "links"> & Partial<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
    }>) => {
        request: (options: {
            mobile?: string | undefined;
            email?: string | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verify: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
        requestPayment: (options: {
            mobile?: string | undefined;
            email?: string | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verifyPayment: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
    };
    zibal: (config: Omit<{
        sandbox?: boolean | undefined;
        links: {
            request: string;
            verify: string;
            payment: string;
        };
        merchantId: string;
    } & {}, "links"> & Partial<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
    }>) => {
        request: (options: {
            mobile?: string | undefined;
            orderId?: string | undefined;
            allowedCards?: string[] | undefined;
            linkToPay?: boolean | undefined;
            sms?: boolean | undefined;
            percentMode?: 0 | 1 | undefined;
            feeMode?: 0 | 2 | 1 | undefined;
            multiplexingInfos?: {
                amount: number;
                bankAccount: string;
                subMerchantId: string;
                walletID: string;
                wagePayer: boolean;
            }[] | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verify: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
        requestPayment: (options: {
            mobile?: string | undefined;
            orderId?: string | undefined;
            allowedCards?: string[] | undefined;
            linkToPay?: boolean | undefined;
            sms?: boolean | undefined;
            percentMode?: 0 | 1 | undefined;
            feeMode?: 0 | 2 | 1 | undefined;
            multiplexingInfos?: {
                amount: number;
                bankAccount: string;
                subMerchantId: string;
                walletID: string;
                wagePayer: boolean;
            }[] | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verifyPayment: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
    };
};
export declare const getPaymentDriver: <DriverName extends "zibal" | "behpardakht" | "idpay" | "nextpay" | "parsian" | "pasargad" | "payfa" | "payir" | "payping" | "sadad" | "saman" | "vandar" | "zarinpal">(driverName: DriverName) => {
    behpardakht: (config: Omit<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
        terminalId: number;
        username: string;
        password: string;
    } & {}, "links"> & Partial<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
    }>) => {
        request: (options: {
            payerId?: number | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verify: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
        requestPayment: (options: {
            payerId?: number | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verifyPayment: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
    };
    idpay: (config: Omit<{
        sandbox?: boolean | null | undefined;
        links: {
            request: string;
            verify: string;
        };
        apiKey: string;
    } & {}, "links"> & Partial<{
        links: {
            request: string;
            verify: string;
        };
    }>) => {
        request: (options: {
            mobile?: string | undefined;
            email?: string | undefined;
            name?: string | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verify: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
        requestPayment: (options: {
            mobile?: string | undefined;
            email?: string | undefined;
            name?: string | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verifyPayment: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
    };
    nextpay: (config: Omit<{
        apiKey?: string | undefined;
        links: {
            request: string;
            verify: string;
            payment: string;
        };
    } & {}, "links"> & Partial<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
    }>) => {
        request: (options: {
            mobile?: string | undefined;
            customFields?: Record<string, string> | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verify: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
        requestPayment: (options: {
            mobile?: string | undefined;
            customFields?: Record<string, string> | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verifyPayment: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
    };
    parsian: (config: Omit<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
        merchantId: string;
    } & {}, "links"> & Partial<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
    }>) => {
        request: (options: {} & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verify: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
        requestPayment: (options: {} & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verifyPayment: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
    };
    pasargad: (config: Omit<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
        terminalId: string;
        merchantId: string;
        privateKeyXMLFile: string;
    } & {}, "links"> & Partial<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
    }>) => {
        request: (options: {
            mobile?: string | undefined;
            email?: string | undefined;
            invoiceNumber: string;
            invoiceDate: string;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verify: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
        requestPayment: (options: {
            mobile?: string | undefined;
            email?: string | undefined;
            invoiceNumber: string;
            invoiceDate: string;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verifyPayment: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
    };
    payfa: (config: Omit<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
        apiKey: string;
    } & {}, "links"> & Partial<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
    }>) => {
        request: (options: {
            mobileNumber?: string | undefined;
            invoiceId?: string | undefined;
            cardNumber?: string | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verify: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
        requestPayment: (options: {
            mobileNumber?: string | undefined;
            invoiceId?: string | undefined;
            cardNumber?: string | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verifyPayment: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
    };
    payir: (config: Omit<{
        sandbox?: boolean | undefined;
        links: {
            request: string;
            verify: string;
            payment: string;
        };
        apiKey: string;
    } & {}, "links"> & Partial<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
    }>) => {
        request: (options: {
            mobile?: string | undefined;
            nationalCode?: string | undefined;
            validCardNumber?: string | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verify: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
        requestPayment: (options: {
            mobile?: string | undefined;
            nationalCode?: string | undefined;
            validCardNumber?: string | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verifyPayment: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
    };
    payping: (config: Omit<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
        apiKey: string;
    } & {}, "links"> & Partial<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
    }>) => {
        request: (options: {
            mobile?: string | undefined;
            email?: string | undefined;
            name?: string | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verify: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
        requestPayment: (options: {
            mobile?: string | undefined;
            email?: string | undefined;
            name?: string | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verifyPayment: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
    };
    sadad: (config: Omit<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
        terminalId: string;
        merchantId: string;
        terminalKey: string;
    } & {}, "links"> & Partial<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
    }>) => {
        request: (options: {
            mobile?: string | undefined;
            multiplexingData?: {
                Type: "Percentage" | "Amount";
                MultiplexingRows: {
                    IbanNumber: number;
                    Value: number;
                }[];
            } | undefined;
            appName?: string | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verify: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
        requestPayment: (options: {
            mobile?: string | undefined;
            multiplexingData?: {
                Type: "Percentage" | "Amount";
                MultiplexingRows: {
                    IbanNumber: number;
                    Value: number;
                }[];
            } | undefined;
            appName?: string | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verifyPayment: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
    };
    saman: (config: Omit<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
        merchantId: string;
    } & {}, "links"> & Partial<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
    }>) => {
        request: (options: {
            mobile?: string | undefined;
            wage?: number | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verify: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
        requestPayment: (options: {
            mobile?: string | undefined;
            wage?: number | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verifyPayment: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
    };
    vandar: (config: Omit<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
        api_key: string;
    } & {}, "links"> & Partial<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
    }>) => {
        request: (options: {
            description?: string | undefined;
            mobile_number?: string | undefined;
            factorNumber?: string | undefined;
            valid_card_number?: string | undefined;
            comment?: string | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verify: (options: {
            message?: string | undefined;
            status?: number | undefined;
            description?: string | undefined;
            mobile?: string | undefined;
            cardNumber?: string | undefined;
            wage?: string | undefined;
            factorNumber?: string | undefined;
            realAmount?: number | undefined;
            transId?: number | undefined;
            paymentDate?: string | undefined;
            cid?: string | undefined;
            errors?: string[] | undefined;
        } & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
        requestPayment: (options: {
            description?: string | undefined;
            mobile_number?: string | undefined;
            factorNumber?: string | undefined;
            valid_card_number?: string | undefined;
            comment?: string | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verifyPayment: (options: {
            message?: string | undefined;
            status?: number | undefined;
            description?: string | undefined;
            mobile?: string | undefined;
            cardNumber?: string | undefined;
            wage?: string | undefined;
            factorNumber?: string | undefined;
            realAmount?: number | undefined;
            transId?: number | undefined;
            paymentDate?: string | undefined;
            cid?: string | undefined;
            errors?: string[] | undefined;
        } & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
    };
    zarinpal: (config: Omit<{
        sandbox?: boolean | undefined;
        links: {
            request: string;
            verify: string;
            payment: string;
        };
        merchantId: string;
    } & {}, "links"> & Partial<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
    }>) => {
        request: (options: {
            mobile?: string | undefined;
            email?: string | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verify: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
        requestPayment: (options: {
            mobile?: string | undefined;
            email?: string | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verifyPayment: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
    };
    zibal: (config: Omit<{
        sandbox?: boolean | undefined;
        links: {
            request: string;
            verify: string;
            payment: string;
        };
        merchantId: string;
    } & {}, "links"> & Partial<{
        links: {
            request: string;
            verify: string;
            payment: string;
        };
    }>) => {
        request: (options: {
            mobile?: string | undefined;
            orderId?: string | undefined;
            allowedCards?: string[] | undefined;
            linkToPay?: boolean | undefined;
            sms?: boolean | undefined;
            percentMode?: 0 | 1 | undefined;
            feeMode?: 0 | 2 | 1 | undefined;
            multiplexingInfos?: {
                amount: number;
                bankAccount: string;
                subMerchantId: string;
                walletID: string;
                wagePayer: boolean;
            }[] | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verify: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
        requestPayment: (options: {
            mobile?: string | undefined;
            orderId?: string | undefined;
            allowedCards?: string[] | undefined;
            linkToPay?: boolean | undefined;
            sms?: boolean | undefined;
            percentMode?: 0 | 1 | undefined;
            feeMode?: 0 | 2 | 1 | undefined;
            multiplexingInfos?: {
                amount: number;
                bankAccount: string;
                subMerchantId: string;
                walletID: string;
                wagePayer: boolean;
            }[] | undefined;
        } & {
            description?: string | undefined;
            callbackUrl: string;
            amount: number;
        }) => Promise<{
            getScript: () => string;
            referenceId: string | number;
            method: "GET" | "POST";
            url: string;
            params?: Record<string, any> | undefined;
        }>;
        verifyPayment: (options: {} & {
            amount: number;
        }, params: Record<string, any>) => Promise<import("./driver").Receipt<any>>;
    };
}[DriverName];
