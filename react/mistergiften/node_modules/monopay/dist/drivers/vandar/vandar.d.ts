export declare const createVandarDriver: (config: Omit<{
    links: {
        request: string;
        verify: string;
        payment: string;
    };
    api_key: string;
} & {}, "links"> & Partial<{
    links: {
        request: string;
        verify: string;
        payment: string;
    };
}>) => {
    request: (options: {
        description?: string | undefined;
        mobile_number?: string | undefined;
        factorNumber?: string | undefined;
        valid_card_number?: string | undefined;
        comment?: string | undefined;
    } & {
        description?: string | undefined;
        callbackUrl: string;
        amount: number;
    }) => Promise<{
        getScript: () => string;
        referenceId: string | number;
        method: "GET" | "POST";
        url: string;
        params?: Record<string, any> | undefined;
    }>;
    verify: (options: {
        message?: string | undefined;
        status?: number | undefined;
        description?: string | undefined;
        mobile?: string | undefined;
        cardNumber?: string | undefined;
        wage?: string | undefined;
        factorNumber?: string | undefined;
        realAmount?: number | undefined;
        transId?: number | undefined;
        paymentDate?: string | undefined;
        cid?: string | undefined;
        errors?: string[] | undefined;
    } & {
        amount: number;
    }, params: Record<string, any>) => Promise<import("../../driver").Receipt<any>>;
    requestPayment: (options: {
        description?: string | undefined;
        mobile_number?: string | undefined;
        factorNumber?: string | undefined;
        valid_card_number?: string | undefined;
        comment?: string | undefined;
    } & {
        description?: string | undefined;
        callbackUrl: string;
        amount: number;
    }) => Promise<{
        getScript: () => string;
        referenceId: string | number;
        method: "GET" | "POST";
        url: string;
        params?: Record<string, any> | undefined;
    }>;
    verifyPayment: (options: {
        message?: string | undefined;
        status?: number | undefined;
        description?: string | undefined;
        mobile?: string | undefined;
        cardNumber?: string | undefined;
        wage?: string | undefined;
        factorNumber?: string | undefined;
        realAmount?: number | undefined;
        transId?: number | undefined;
        paymentDate?: string | undefined;
        cid?: string | undefined;
        errors?: string[] | undefined;
    } & {
        amount: number;
    }, params: Record<string, any>) => Promise<import("../../driver").Receipt<any>>;
};
export type VandarDriver = ReturnType<typeof createVandarDriver>;
