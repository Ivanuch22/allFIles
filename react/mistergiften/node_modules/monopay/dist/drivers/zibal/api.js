"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IPGUserErrors = exports.IPGConfigErrors = exports.verifyErrors = exports.callbackErrors = exports.purchaseErrors = exports.multiplexingObjectSchema = void 0;
const zod_1 = require("zod");
exports.multiplexingObjectSchema = zod_1.z.object({
    bankAccount: zod_1.z.string(),
    subMerchantId: zod_1.z.string(),
    walletID: zod_1.z.string(),
    amount: zod_1.z.number(),
    wagePayer: zod_1.z.boolean(),
});
exports.purchaseErrors = {
    '102': 'merchant یافت نشد.',
    '103': 'merchant غیرفعال',
    '104': 'merchant نامعتبر',
    '201': 'قبلا تایید شده.',
    '105': 'amount بایستی بزرگتر از 1,000 ریال باشد.',
    '106': 'callbackUrl نامعتبر می‌باشد. (شروع با http و یا https)',
    '113': 'amount مبلغ تراکنش از سقف میزان تراکنش بیشتر است.',
};
exports.callbackErrors = {
    '-1': 'در انتظار پردخت',
    '-2': 'خطای داخلی',
    '1': 'پرداخت شده - تاییدشده',
    '2': 'پرداخت شده - تاییدنشده',
    '3': 'لغوشده توسط کاربر',
    '4': '‌شماره کارت نامعتبر می‌باشد.',
    '5': '‌موجودی حساب کافی نمی‌باشد.',
    '6': 'رمز واردشده اشتباه می‌باشد.',
    '7': '‌تعداد درخواست‌ها بیش از حد مجاز می‌باشد.',
    '8': '‌تعداد پرداخت اینترنتی روزانه بیش از حد مجاز می‌باشد.',
    '9': 'مبلغ پرداخت اینترنتی روزانه بیش از حد مجاز می‌باشد.',
    '10': '‌صادرکننده‌ی کارت نامعتبر می‌باشد.',
    '11': '‌خطای سوییچ',
    '12': 'کارت قابل دسترسی نمی‌باشد.',
};
exports.verifyErrors = {
    '102': 'merchant یافت نشد.',
    '103': 'merchant غیرفعال',
    '104': 'merchant نامعتبر',
    '201': 'قبلا تایید شده.',
    '105': 'amount بایستی بزرگتر از 1,000 ریال باشد.',
    '202': 'سفارش پرداخت نشده یا ناموفق بوده است. جهت اطلاعات بیشتر جدول وضعیت‌ها را مطالعه کنید.',
    '203': 'trackId نامعتبر می‌باشد.',
};
exports.IPGConfigErrors = ['102', '103', '104', '201', '105', '106', '113', '203'];
exports.IPGUserErrors = ['202', '3', '4', '5', '6', '7', '8', '9', '10', '12'];
//# sourceMappingURL=api.js.map