{"ast":null,"code":"var _jsxFileName = \"/Users/ivan/Desktop/mistergiften/src/store/calculator.tsx\";\nimport React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// class TodoStore {\n//   todos: Array<ITodo> = [];\n//   pendingRequests = 0;\n\n//   constructor() {\n//     makeObservable(this, {\n//       todos: observable,\n//       pendingRequests: observable,\n//       completedTodosCount: computed,\n//       report: computed,\n//       addTodo: action,\n//     });\n//     autorun(() => console.log(this.report));\n//   }\n\n//   get completedTodosCount() {\n//     return this.todos.filter((todo: ITodo) => todo.completed === true).length;\n//   }\n\n//   get report() {\n//     if (this.todos.length === 0) {\n//       return \"<none>\";\n//     }\n//     var nextTodo: ITodo | undefined = this.todos.find(\n//       (todo: ITodo) => todo.completed === false\n//     );\n//     return `<p>Next todo: \"${nextTodo ? nextTodo.task : \"<none>\"}. Progress: ${\n//       this.completedTodosCount\n//     }/${this.todos.length} </p>`;\n//   }\n\n//   addTodo(task: string) {\n//     this.todos.push({\n//       task: task,\n//       completed: false,\n//       assignee: null,\n//     });\n//   }\n// }\n// export default new TodoStore();\nconst TodoList = observer(_c = ({\n  store\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: store\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 10\n  }, this);\n});\n_c2 = TodoList;\nvar _c, _c2;\n$RefreshReg$(_c, \"TodoList$observer\");\n$RefreshReg$(_c2, \"TodoList\");","map":{"version":3,"names":["React","observer","jsxDEV","_jsxDEV","TodoList","_c","store","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/ivan/Desktop/mistergiften/src/store/calculator.tsx"],"sourcesContent":["import React from \"react\";\nimport mobx, {\n  autorun,\n  action,\n  computed,\n  makeObservable,\n  observable,\n} from \"mobx\";\nimport { observer } from \"mobx-react\";\n\ninterface ITodo {\n  completed: boolean;\n  task: string;\n  assignee: null;\n}\ninterface IComponent {\n  store: any;\n}\n// class TodoStore {\n//   todos: Array<ITodo> = [];\n//   pendingRequests = 0;\n\n//   constructor() {\n//     makeObservable(this, {\n//       todos: observable,\n//       pendingRequests: observable,\n//       completedTodosCount: computed,\n//       report: computed,\n//       addTodo: action,\n//     });\n//     autorun(() => console.log(this.report));\n//   }\n\n//   get completedTodosCount() {\n//     return this.todos.filter((todo: ITodo) => todo.completed === true).length;\n//   }\n\n//   get report() {\n//     if (this.todos.length === 0) {\n//       return \"<none>\";\n//     }\n//     var nextTodo: ITodo | undefined = this.todos.find(\n//       (todo: ITodo) => todo.completed === false\n//     );\n//     return `<p>Next todo: \"${nextTodo ? nextTodo.task : \"<none>\"}. Progress: ${\n//       this.completedTodosCount\n//     }/${this.todos.length} </p>`;\n//   }\n\n//   addTodo(task: string) {\n//     this.todos.push({\n//       task: task,\n//       completed: false,\n//       assignee: null,\n//     });\n//   }\n// }\n// export default new TodoStore();\n\nconst TodoList: React.FC<IComponent> = observer(({ store }) => {\n  return <h1>{store}</h1>;\n});\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAQzB,SAASC,QAAQ,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMC,QAA8B,GAAGH,QAAQ,CAAAI,EAAA,GAACA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAC7D,oBAAOH,OAAA;IAAAI,QAAA,EAAKD;EAAK;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AACzB,CAAC,CAAC;AAACC,GAAA,GAFGR,QAA8B;AAAA,IAAAC,EAAA,EAAAO,GAAA;AAAAC,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}