{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nclass MainStore {\n  constructor() {\n    this.data = [];\n    this.likedCarts = [];\n    this.addedCarts = [];\n    makeAutoObservable(this);\n  }\n  get getData() {\n    return this.data;\n  }\n  get getLikedCarts() {\n    return this.data.filter((cart, index) => cart.isLike);\n  }\n  get getAddedCarts() {\n    return this.addedCarts;\n  }\n  sortAndCountByName(objects) {\n    const nameCountMap = {};\n    objects.forEach(obj => {\n      const {\n        name,\n        type,\n        ...rest\n      } = obj;\n      const key = type && type.length > 0 ? `${name}-${JSON.stringify(type)}` : name;\n      if (key in nameCountMap) {\n        nameCountMap[key].count++;\n      } else {\n        nameCountMap[key] = {\n          name,\n          count: 1,\n          type: type ? [...type] : undefined,\n          ...rest\n        };\n      }\n    });\n    const sortedObjects = Object.values(nameCountMap).sort((a, b) => {\n      const nameComparison = a.name.localeCompare(b.name);\n      if (nameComparison === 0) {\n        var _b$type, _a$type;\n        // If names are equal, compare by type length\n        const typeLengthComparison = (((_b$type = b.type) === null || _b$type === void 0 ? void 0 : _b$type.length) || 0) - (((_a$type = a.type) === null || _a$type === void 0 ? void 0 : _a$type.length) || 0);\n        if (typeLengthComparison === 0 && a.type && b.type) {\n          // If type lengths are equal, compare by type names\n          const typeNameComparison = a.type[0].isActive ? -1 : 1;\n          return typeNameComparison;\n        }\n        return typeLengthComparison;\n      }\n      return nameComparison;\n    });\n    return sortedObjects;\n  }\n  addCart(e, cart) {\n    e.preventDefault();\n    this.addedCarts.push(cart);\n  }\n}\nexport default new MainStore();","map":{"version":3,"names":["makeAutoObservable","MainStore","constructor","data","likedCarts","addedCarts","getData","getLikedCarts","filter","cart","index","isLike","getAddedCarts","sortAndCountByName","objects","nameCountMap","forEach","obj","name","type","rest","key","length","JSON","stringify","count","undefined","sortedObjects","Object","values","sort","a","b","nameComparison","localeCompare","_b$type","_a$type","typeLengthComparison","typeNameComparison","isActive","addCart","e","preventDefault","push"],"sources":["/Users/ivan/Desktop/mistergiften/src/store/MainStore.tsx"],"sourcesContent":["import { makeAutoObservable } from \"mobx\";\nimport React from \"react\";\n\ninterface ICart {\n  id: string;\n  name: string;\n  price: number;\n  oldPrice: number;\n  images: string[];\n  isLike: boolean;\n  isAdd: boolean;\n  description: string;\n  about: string;\n  type: IType[];\n  imgOrdered: string[];\n  features: IFeatures[];\n}\ninterface IFeatures {\n  [key: string]: string;\n}\ninterface IType {\n  name: string;\n  isActive: boolean;\n  img: string;\n}\n\nclass MainStore {\n  data: ICart[] = [];\n  likedCarts: ICart[] = [];\n  addedCarts: ICart[] = [];\n  constructor() {\n    makeAutoObservable(this);\n  }\n  get getData() {\n    return this.data;\n  }\n  get getLikedCarts() {\n    return this.data.filter((cart, index) => cart.isLike);\n  }\n  get getAddedCarts() {\n    return this.addedCarts;\n  }\n  sortAndCountByName(objects: ICart[]) {\n    const nameCountMap: {\n      [key: string]: {\n        name: string;\n        count: number;\n        type?: { isActive: boolean; img: string }[];\n      };\n    } = {};\n\n    objects.forEach((obj) => {\n      const { name, type, ...rest } = obj;\n      const key =\n        type && type.length > 0 ? `${name}-${JSON.stringify(type)}` : name;\n\n      if (key in nameCountMap) {\n        nameCountMap[key].count++;\n      } else {\n        nameCountMap[key] = {\n          name,\n          count: 1,\n          type: type ? [...type] : undefined,\n          ...rest,\n        };\n      }\n    });\n\n    const sortedObjects = Object.values(nameCountMap).sort((a, b) => {\n      const nameComparison = a.name.localeCompare(b.name);\n\n      if (nameComparison === 0) {\n        // If names are equal, compare by type length\n        const typeLengthComparison =\n          (b.type?.length || 0) - (a.type?.length || 0);\n\n        if (typeLengthComparison === 0 && a.type && b.type) {\n          // If type lengths are equal, compare by type names\n          const typeNameComparison = a.type[0].isActive ? -1 : 1;\n\n          return typeNameComparison;\n        }\n\n        return typeLengthComparison;\n      }\n\n      return nameComparison;\n    });\n\n    return sortedObjects;\n  }\n\n  addCart(e: React.MouseEvent, cart: ICart) {\n    e.preventDefault();\n    this.addedCarts.push(cart);\n  }\n}\nexport default new MainStore();\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,MAAM;AA0BzC,MAAMC,SAAS,CAAC;EAIdC,WAAWA,CAAA,EAAG;IAAA,KAHdC,IAAI,GAAY,EAAE;IAAA,KAClBC,UAAU,GAAY,EAAE;IAAA,KACxBC,UAAU,GAAY,EAAE;IAEtBL,kBAAkB,CAAC,IAAI,CAAC;EAC1B;EACA,IAAIM,OAAOA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACH,IAAI;EAClB;EACA,IAAII,aAAaA,CAAA,EAAG;IAClB,OAAO,IAAI,CAACJ,IAAI,CAACK,MAAM,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAKD,IAAI,CAACE,MAAM,CAAC;EACvD;EACA,IAAIC,aAAaA,CAAA,EAAG;IAClB,OAAO,IAAI,CAACP,UAAU;EACxB;EACAQ,kBAAkBA,CAACC,OAAgB,EAAE;IACnC,MAAMC,YAML,GAAG,CAAC,CAAC;IAEND,OAAO,CAACE,OAAO,CAAEC,GAAG,IAAK;MACvB,MAAM;QAAEC,IAAI;QAAEC,IAAI;QAAE,GAAGC;MAAK,CAAC,GAAGH,GAAG;MACnC,MAAMI,GAAG,GACPF,IAAI,IAAIA,IAAI,CAACG,MAAM,GAAG,CAAC,GAAI,GAAEJ,IAAK,IAAGK,IAAI,CAACC,SAAS,CAACL,IAAI,CAAE,EAAC,GAAGD,IAAI;MAEpE,IAAIG,GAAG,IAAIN,YAAY,EAAE;QACvBA,YAAY,CAACM,GAAG,CAAC,CAACI,KAAK,EAAE;MAC3B,CAAC,MAAM;QACLV,YAAY,CAACM,GAAG,CAAC,GAAG;UAClBH,IAAI;UACJO,KAAK,EAAE,CAAC;UACRN,IAAI,EAAEA,IAAI,GAAG,CAAC,GAAGA,IAAI,CAAC,GAAGO,SAAS;UAClC,GAAGN;QACL,CAAC;MACH;IACF,CAAC,CAAC;IAEF,MAAMO,aAAa,GAAGC,MAAM,CAACC,MAAM,CAACd,YAAY,CAAC,CAACe,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MAC/D,MAAMC,cAAc,GAAGF,CAAC,CAACb,IAAI,CAACgB,aAAa,CAACF,CAAC,CAACd,IAAI,CAAC;MAEnD,IAAIe,cAAc,KAAK,CAAC,EAAE;QAAA,IAAAE,OAAA,EAAAC,OAAA;QACxB;QACA,MAAMC,oBAAoB,GACxB,CAAC,EAAAF,OAAA,GAAAH,CAAC,CAACb,IAAI,cAAAgB,OAAA,uBAANA,OAAA,CAAQb,MAAM,KAAI,CAAC,KAAK,EAAAc,OAAA,GAAAL,CAAC,CAACZ,IAAI,cAAAiB,OAAA,uBAANA,OAAA,CAAQd,MAAM,KAAI,CAAC,CAAC;QAE/C,IAAIe,oBAAoB,KAAK,CAAC,IAAIN,CAAC,CAACZ,IAAI,IAAIa,CAAC,CAACb,IAAI,EAAE;UAClD;UACA,MAAMmB,kBAAkB,GAAGP,CAAC,CAACZ,IAAI,CAAC,CAAC,CAAC,CAACoB,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC;UAEtD,OAAOD,kBAAkB;QAC3B;QAEA,OAAOD,oBAAoB;MAC7B;MAEA,OAAOJ,cAAc;IACvB,CAAC,CAAC;IAEF,OAAON,aAAa;EACtB;EAEAa,OAAOA,CAACC,CAAmB,EAAEhC,IAAW,EAAE;IACxCgC,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACrC,UAAU,CAACsC,IAAI,CAAClC,IAAI,CAAC;EAC5B;AACF;AACA,eAAe,IAAIR,SAAS,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}