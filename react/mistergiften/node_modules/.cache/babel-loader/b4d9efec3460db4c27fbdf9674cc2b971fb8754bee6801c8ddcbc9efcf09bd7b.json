{"ast":null,"code":"var _jsxFileName = \"/Users/ivan/Desktop/Mistery/mistergiften/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./style.scss\";\nimport \"swiper/css\";\nimport \"swiper/css/navigation\";\nimport \"swiper/css/pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [token, setToken] = useState(\"\");\n  const [likedCart, setLikeCarts] = useState([]);\n  const [addMock, setAddCarts] = useState([]);\n  const [counterLike, setLikeCouter] = useState(0);\n  const [counterAdd, setAddCouter] = useState(0);\n  const [mockBoxs, setMockBoxs] = useState([]);\n  const [mockBigSize, setMockBigSize] = useState([]);\n  const [mockChameleon, setMockChameleon] = useState([]);\n  const [mockWithPhoto, setMockWithPhoto] = useState([]);\n  const [mockMostPopular, setMockMostPopular] = useState([]);\n  const [openedCart, setOpenedCart] = useState([]);\n  useEffect(() => {\n    const dataUrl = [\"boxs.json\", \"bigSize.json\", \"chameleons.json\", \"cupsWithPhotos.json\"];\n    const setDatas = [setMockBoxs, setMockBigSize, setMockChameleon, setMockWithPhoto];\n    dataUrl.map((element, index) => {\n      fetch(`${process.env.PUBLIC_URL}/data/${element}`).then(response => response.json()).then(data => setDatas[index](data));\n    });\n  }, []);\n  const updateCardsLike = (updatedCard, funcUpdateState) => {\n    funcUpdateState(prevData => prevData.map(card => card.id === updatedCard.id ? updatedCard : card));\n  };\n  const slj = () => {\n    fetch(\"./data/boxs.json\").then(response => response.json()).then(data => console.log(data));\n  };\n  const fileterLike = updatedCart => {\n    if (updatedCart.isLike) {\n      setLikeCarts(prevData => [...prevData, updatedCart]);\n    } else {\n      setLikeCarts(prevData => prevData.filter(cart => cart.id !== updatedCart.id));\n    }\n  };\n  const onLikeClick = (event, cart, setCart, chagedState) => {\n    event.preventDefault();\n    const updatedCart = {\n      ...cart,\n      isLike: !cart.isLike\n    };\n    setCart(updatedCart);\n    updateCardsLike(updateCardAdd, chagedState);\n    fileterLike(updatedCart);\n  };\n  const updateCardAdd = updatedCard => {\n    console.log(\"hello\");\n  };\n  return (\n    /*#__PURE__*/\n    // <div className=\"App\">\n    //   {likedCart.length > 0 ? (\n    //     <OnLikeText name={likedCart[likedCart.length - 1].name} />\n    //   ) : null}\n    //   <Header\n    //     counterAdd={counterAdd}\n    //     counterLike={counterLike}\n    //     updateCardAdd={updateCardAdd}\n    //     addMock={addMock}\n    //     likedCart={likedCart}\n    //     updateCardsLike={updateCardsLike}\n    //   />\n    //   <Routes>\n    //     <Route\n    //       path=\"\"\n    //       element={\n    //         <HomePage\n    //           updateCardAdd={updateCardAdd}\n    //           updateCardLike={updateCardsLike}\n    //           mockBigSize={mockBigSize}\n    //           mockBoxs={mockBoxs}\n    //           mockMostPopular={mockMostPopular}\n    //           setOpenedCart={setOpenedCart}\n    //           onLikeClick={onLikeClick}\n    //         />\n    //       }\n    //     />\n    //     <Route\n    //       path=\"/cart/:id\"\n    //       element={\n    //         <CartPage\n    //           cards={mockMostPopular}\n    //           openedCart={openedCart}\n    //           onLikeClick={onLikeClick}\n    //           setOpenedCart={setOpenedCart}\n    //           updateCardAdd={updateCardAdd}\n    //           updateCardLike={updateCardsLike}\n    //           chagedState={mockWithPhoto}\n    //         />\n    //       }\n    //     />\n    //     <Route\n    //       path=\"auth\"\n    //       element={<Autorization token={token} setToken={setToken} />}\n    //     />\n    //     <Route\n    //       path=\"registration\"\n    //       element={<Autorization token={token} setToken={setToken} />}\n    //     />\n    //     <Route\n    //       path=\"cupsWidthPhotos\"\n    //       element={\n    //         <PageTemplate\n    //           data={mockWithPhoto} //сам масив\n    //           onLikeClick={onLikeClick} //функція лайку\n    //           changedState={setMockWithPhoto} //зміна стейту масива з якого показують данні\n    //           setOpenedCart={setOpenedCart} //зміна відкритої карточки\n    //           updateCardAdd={updateCardAdd} //непотрібна поки\n    //           isShowCarts={true}\n    //           isShowLables={false}\n    //           isShowText={false}\n    //           updateCardLike={updateCardsLike}\n    //         />\n    //       }\n    //     />\n    //     <Route\n    //       path=\"chameleon\"\n    //       element={\n    //         <PageTemplate\n    //           onLikeClick={onLikeClick} //функція лайку\n    //           changedState={setMockChameleon} //зміна стейту масива з якого показують данні\n    //           updateCardAdd={updateCardAdd}\n    //           setOpenedCart={setOpenedCart}\n    //           updateCardLike={updateCardsLike}\n    //           data={mockChameleon}\n    //           isShowCarts={true}\n    //           isShowLables={false}\n    //           isShowText={false}\n    //         />\n    //       }\n    //     />\n    //     <Route\n    //       path=\"BigSize\"\n    //       element={\n    //         <PageTemplate\n    //           onLikeClick={onLikeClick} //функція лайку\n    //           changedState={setMockBigSize} //зміна стейту масива з якого показують данні\n    //           updateCardAdd={updateCardAdd}\n    //           setOpenedCart={setOpenedCart}\n    //           updateCardLike={updateCardsLike}\n    //           data={mockBigSize}\n    //           isShowCarts={true}\n    //           isShowLables={false}\n    //           isShowText={false}\n    //         />\n    //       }\n    //     />\n    //     <Route\n    //       path=\"Boxs\"\n    //       element={\n    //         <PageTemplate\n    //           onLikeClick={onLikeClick} //функція лайку\n    //           changedState={setMockBoxs} //зміна стейту масива з якого показують данні\n    //           data={mockBoxs}\n    //           isShowCarts={true}\n    //           isShowLables={true}\n    //           setOpenedCart={setOpenedCart}\n    //           isShowText={false}\n    //           updateCardAdd={updateCardAdd}\n    //           updateCardLike={updateCardsLike}\n    //         />\n    //       }\n    //     />\n    //     <Route\n    //       path=\"Delivery\"\n    //       element={\n    //         <PageTemplate\n    //           updateCardAdd={updateCardAdd}\n    //           updateCardLike={updateCardsLike}\n    //           data={mockMostPopular}\n    //           isShowCarts={false}\n    //           isShowLables={false}\n    //           isShowText={true}\n    //           title=\"Про доставку\"\n    //           description=\"Намагаємось доставити ваше замовлення так швидко, як котик біжить як чує звук відкриття холодильнику.\n    //           Оформлені до 18:00 замовлення відправляємо в той же день!\n    //           Доставка Новою Поштою 1-3 дні. Оплатити можна при отриманні на пошті, або по передплаті на карту.\"\n    //         />\n    //       }\n    //     />\n    //     <Route\n    //       path=\"AboutUs\"\n    //       element={\n    //         <PageTemplate\n    //           updateCardAdd={updateCardAdd}\n    //           updateCardLike={updateCardsLike}\n    //           data={mockMostPopular}\n    //           isShowCarts={false}\n    //           isShowLables={false}\n    //           isShowText={true}\n    //           title=\"Про нас\"\n    //           description=\"Колись я оновлю цей блок і тут буде інформація про команду і те що ми зробили за весь час.\"\n    //         />\n    //       }\n    //     />\n    //   </Routes>\n    //   <Feedback />\n    //   <Search />\n    //   <Footer />\n    // </div>\n    _jsxDEV(\"h2\", {\n      children: \"al;dskfjal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(App, \"o7IzPBvPBBh6GSAkwlxmnkv2piU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","token","setToken","likedCart","setLikeCarts","addMock","setAddCarts","counterLike","setLikeCouter","counterAdd","setAddCouter","mockBoxs","setMockBoxs","mockBigSize","setMockBigSize","mockChameleon","setMockChameleon","mockWithPhoto","setMockWithPhoto","mockMostPopular","setMockMostPopular","openedCart","setOpenedCart","dataUrl","setDatas","map","element","index","fetch","process","env","PUBLIC_URL","then","response","json","data","updateCardsLike","updatedCard","funcUpdateState","prevData","card","id","slj","console","log","fileterLike","updatedCart","isLike","filter","cart","onLikeClick","event","setCart","chagedState","preventDefault","updateCardAdd","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ivan/Desktop/Mistery/mistergiften/src/App.tsx"],"sourcesContent":["import { Route, Routes } from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\n\nimport Header from \"./components/header\";\nimport Footer from \"./components/footer\";\nimport Feedback from \"./components/feedback\";\nimport Autorization from \"./pages/autorization/AuthPage\";\nimport PageTemplate from \"./pages/PageTemplate\";\nimport Search from \"./components/search\";\nimport CartPage from \"./pages/CartPage\";\nimport HomePage from \"./pages/HomePage\";\nimport OnLikeText from \"./components/onLikeText\";\n\nimport \"./style.scss\";\nimport \"swiper/css\";\nimport \"swiper/css/navigation\";\nimport \"swiper/css/pagination\";\n\ninterface Cup {\n  id: number;\n  name: string;\n  isLike: boolean;\n  isAdd: boolean;\n}\n\nconst App = () => {\n  const [token, setToken] = useState(\"\");\n  const [likedCart, setLikeCarts] = useState<Cup[]>([]);\n  const [addMock, setAddCarts] = useState([]);\n  const [counterLike, setLikeCouter] = useState(0);\n  const [counterAdd, setAddCouter] = useState(0);\n  const [mockBoxs, setMockBoxs] = useState([]);\n  const [mockBigSize, setMockBigSize] = useState([]);\n  const [mockChameleon, setMockChameleon] = useState([]);\n  const [mockWithPhoto, setMockWithPhoto] = useState([]);\n  const [mockMostPopular, setMockMostPopular] = useState([]);\n  const [openedCart, setOpenedCart] = useState([]);\n\n  useEffect(() => {\n    const dataUrl = [\n      \"boxs.json\",\n      \"bigSize.json\",\n      \"chameleons.json\",\n      \"cupsWithPhotos.json\",\n    ];\n    const setDatas = [\n      setMockBoxs,\n      setMockBigSize,\n      setMockChameleon,\n      setMockWithPhoto,\n    ];\n    dataUrl.map((element: string, index: number) => {\n      fetch(`${process.env.PUBLIC_URL}/data/${element}`)\n        .then((response) => response.json())\n        .then((data) => setDatas[index](data));\n    });\n  }, []);\n\n  const updateCardsLike = (updatedCard: any, funcUpdateState: any) => {\n    funcUpdateState((prevData: any) =>\n      prevData.map((card: any) =>\n        card.id === updatedCard.id ? updatedCard : card\n      )\n    );\n  };\n\n  const slj = () => {\n    fetch(\"./data/boxs.json\")\n      .then((response) => response.json())\n      .then((data) => console.log(data));\n  };\n\n  const fileterLike = (updatedCart: any) => {\n    if (updatedCart.isLike) {\n      setLikeCarts((prevData: any) => [...prevData, updatedCart]);\n    } else {\n      setLikeCarts((prevData: any) =>\n        prevData.filter((cart: any) => cart.id !== updatedCart.id)\n      );\n    }\n  };\n\n  const onLikeClick = (\n    event: React.MouseEvent<HTMLButtonElement>,\n    cart: any,\n    setCart: any,\n    chagedState: any\n  ) => {\n    event.preventDefault();\n    const updatedCart = { ...cart, isLike: !cart.isLike };\n    setCart(updatedCart);\n    updateCardsLike(updateCardAdd, chagedState);\n    fileterLike(updatedCart);\n  };\n\n  const updateCardAdd = (updatedCard: any) => {\n    console.log(\"hello\");\n  };\n\n  return (\n    // <div className=\"App\">\n    //   {likedCart.length > 0 ? (\n    //     <OnLikeText name={likedCart[likedCart.length - 1].name} />\n    //   ) : null}\n    //   <Header\n    //     counterAdd={counterAdd}\n    //     counterLike={counterLike}\n    //     updateCardAdd={updateCardAdd}\n    //     addMock={addMock}\n    //     likedCart={likedCart}\n    //     updateCardsLike={updateCardsLike}\n    //   />\n    //   <Routes>\n    //     <Route\n    //       path=\"\"\n    //       element={\n    //         <HomePage\n    //           updateCardAdd={updateCardAdd}\n    //           updateCardLike={updateCardsLike}\n    //           mockBigSize={mockBigSize}\n    //           mockBoxs={mockBoxs}\n    //           mockMostPopular={mockMostPopular}\n    //           setOpenedCart={setOpenedCart}\n    //           onLikeClick={onLikeClick}\n    //         />\n    //       }\n    //     />\n    //     <Route\n    //       path=\"/cart/:id\"\n    //       element={\n    //         <CartPage\n    //           cards={mockMostPopular}\n    //           openedCart={openedCart}\n    //           onLikeClick={onLikeClick}\n    //           setOpenedCart={setOpenedCart}\n    //           updateCardAdd={updateCardAdd}\n    //           updateCardLike={updateCardsLike}\n    //           chagedState={mockWithPhoto}\n    //         />\n    //       }\n    //     />\n    //     <Route\n    //       path=\"auth\"\n    //       element={<Autorization token={token} setToken={setToken} />}\n    //     />\n    //     <Route\n    //       path=\"registration\"\n    //       element={<Autorization token={token} setToken={setToken} />}\n    //     />\n    //     <Route\n    //       path=\"cupsWidthPhotos\"\n    //       element={\n    //         <PageTemplate\n    //           data={mockWithPhoto} //сам масив\n    //           onLikeClick={onLikeClick} //функція лайку\n    //           changedState={setMockWithPhoto} //зміна стейту масива з якого показують данні\n    //           setOpenedCart={setOpenedCart} //зміна відкритої карточки\n    //           updateCardAdd={updateCardAdd} //непотрібна поки\n    //           isShowCarts={true}\n    //           isShowLables={false}\n    //           isShowText={false}\n    //           updateCardLike={updateCardsLike}\n    //         />\n    //       }\n    //     />\n    //     <Route\n    //       path=\"chameleon\"\n    //       element={\n    //         <PageTemplate\n    //           onLikeClick={onLikeClick} //функція лайку\n    //           changedState={setMockChameleon} //зміна стейту масива з якого показують данні\n    //           updateCardAdd={updateCardAdd}\n    //           setOpenedCart={setOpenedCart}\n    //           updateCardLike={updateCardsLike}\n    //           data={mockChameleon}\n    //           isShowCarts={true}\n    //           isShowLables={false}\n    //           isShowText={false}\n    //         />\n    //       }\n    //     />\n    //     <Route\n    //       path=\"BigSize\"\n    //       element={\n    //         <PageTemplate\n    //           onLikeClick={onLikeClick} //функція лайку\n    //           changedState={setMockBigSize} //зміна стейту масива з якого показують данні\n    //           updateCardAdd={updateCardAdd}\n    //           setOpenedCart={setOpenedCart}\n    //           updateCardLike={updateCardsLike}\n    //           data={mockBigSize}\n    //           isShowCarts={true}\n    //           isShowLables={false}\n    //           isShowText={false}\n    //         />\n    //       }\n    //     />\n    //     <Route\n    //       path=\"Boxs\"\n    //       element={\n    //         <PageTemplate\n    //           onLikeClick={onLikeClick} //функція лайку\n    //           changedState={setMockBoxs} //зміна стейту масива з якого показують данні\n    //           data={mockBoxs}\n    //           isShowCarts={true}\n    //           isShowLables={true}\n    //           setOpenedCart={setOpenedCart}\n    //           isShowText={false}\n    //           updateCardAdd={updateCardAdd}\n    //           updateCardLike={updateCardsLike}\n    //         />\n    //       }\n    //     />\n    //     <Route\n    //       path=\"Delivery\"\n    //       element={\n    //         <PageTemplate\n    //           updateCardAdd={updateCardAdd}\n    //           updateCardLike={updateCardsLike}\n    //           data={mockMostPopular}\n    //           isShowCarts={false}\n    //           isShowLables={false}\n    //           isShowText={true}\n    //           title=\"Про доставку\"\n    //           description=\"Намагаємось доставити ваше замовлення так швидко, як котик біжить як чує звук відкриття холодильнику.\n    //           Оформлені до 18:00 замовлення відправляємо в той же день!\n    //           Доставка Новою Поштою 1-3 дні. Оплатити можна при отриманні на пошті, або по передплаті на карту.\"\n    //         />\n    //       }\n    //     />\n    //     <Route\n    //       path=\"AboutUs\"\n    //       element={\n    //         <PageTemplate\n    //           updateCardAdd={updateCardAdd}\n    //           updateCardLike={updateCardsLike}\n    //           data={mockMostPopular}\n    //           isShowCarts={false}\n    //           isShowLables={false}\n    //           isShowText={true}\n    //           title=\"Про нас\"\n    //           description=\"Колись я оновлю цей блок і тут буде інформація про команду і те що ми зробили за весь час.\"\n    //         />\n    //       }\n    //     />\n    //   </Routes>\n\n    //   <Feedback />\n    //   <Search />\n    //   <Footer />\n    // </div>\n    <h2>al;dskfjal</h2>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}