{"ast":null,"code":"import { autorun, action, computed, makeObservable, observable } from \"mobx\";\nimport \"mobx\";\nclass TodoStore {\n  constructor() {\n    this.todos = [];\n    this.pendingRequests = 0;\n    makeObservable(this, {\n      todos: observable,\n      pendingRequests: observable,\n      completedTodosCount: computed,\n      report: computed,\n      addTodo: action\n    });\n    autorun(() => console.log(this.report));\n  }\n  get completedTodosCount() {\n    return this.todos.filter(todo => todo.completed === true).length;\n  }\n  report() {\n    if (this.todos.length === 0) {\n      return \"<none>\";\n    }\n    var nextTodo = this.todos.find(todo => todo.completed === false);\n    return `<p>Next todo: \"${nextTodo ? nextTodo.task : \"<none>\"}. Progress: ${this.completedTodosCount}/${this.todos.length} </p>`;\n  }\n  addTodo(task) {\n    this.todos.push({\n      task: task,\n      completed: false,\n      assignee: null\n    });\n  }\n}\nexport default new TodoStore();","map":{"version":3,"names":["autorun","action","computed","makeObservable","observable","TodoStore","constructor","todos","pendingRequests","completedTodosCount","report","addTodo","console","log","filter","todo","completed","length","nextTodo","find","task","push","assignee"],"sources":["/Users/ivan/Desktop/mistergiften/src/store/calculator.tsx"],"sourcesContent":["import mobx, {\n  autorun,\n  action,\n  computed,\n  makeObservable,\n  observable,\n} from \"mobx\";\nimport {} from \"mobx\";\n\ninterface ITodo {\n  completed: boolean;\n  task: string;\n  assignee: null;\n}\nclass TodoStore {\n  todos: Array<ITodo> = [];\n  pendingRequests = 0;\n\n  constructor() {\n    makeObservable(this, {\n      todos: observable,\n      pendingRequests: observable,\n      completedTodosCount: computed,\n      report: computed,\n      addTodo: action,\n    });\n    autorun(() => console.log(this.report));\n  }\n\n  get completedTodosCount() {\n    return this.todos.filter((todo: ITodo) => todo.completed === true).length;\n  }\n\n  report() {\n    if (this.todos.length === 0) {\n      return \"<none>\";\n    }\n    var nextTodo: ITodo | undefined = this.todos.find(\n      (todo: ITodo) => todo.completed === false\n    );\n    return `<p>Next todo: \"${nextTodo ? nextTodo.task : \"<none>\"}. Progress: ${\n      this.completedTodosCount\n    }/${this.todos.length} </p>`;\n  }\n\n  addTodo(task: string) {\n    this.todos.push({\n      task: task,\n      completed: false,\n      assignee: null,\n    });\n  }\n}\nexport default new TodoStore();\n"],"mappings":"AAAA,SACEA,OAAO,EACPC,MAAM,EACNC,QAAQ,EACRC,cAAc,EACdC,UAAU,QACL,MAAM;AACb,OAAe,MAAM;AAOrB,MAAMC,SAAS,CAAC;EAIdC,WAAWA,CAAA,EAAG;IAAA,KAHdC,KAAK,GAAiB,EAAE;IAAA,KACxBC,eAAe,GAAG,CAAC;IAGjBL,cAAc,CAAC,IAAI,EAAE;MACnBI,KAAK,EAAEH,UAAU;MACjBI,eAAe,EAAEJ,UAAU;MAC3BK,mBAAmB,EAAEP,QAAQ;MAC7BQ,MAAM,EAAER,QAAQ;MAChBS,OAAO,EAAEV;IACX,CAAC,CAAC;IACFD,OAAO,CAAC,MAAMY,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,MAAM,CAAC,CAAC;EACzC;EAEA,IAAID,mBAAmBA,CAAA,EAAG;IACxB,OAAO,IAAI,CAACF,KAAK,CAACO,MAAM,CAAEC,IAAW,IAAKA,IAAI,CAACC,SAAS,KAAK,IAAI,CAAC,CAACC,MAAM;EAC3E;EAEAP,MAAMA,CAAA,EAAG;IACP,IAAI,IAAI,CAACH,KAAK,CAACU,MAAM,KAAK,CAAC,EAAE;MAC3B,OAAO,QAAQ;IACjB;IACA,IAAIC,QAA2B,GAAG,IAAI,CAACX,KAAK,CAACY,IAAI,CAC9CJ,IAAW,IAAKA,IAAI,CAACC,SAAS,KAAK,KACtC,CAAC;IACD,OAAQ,kBAAiBE,QAAQ,GAAGA,QAAQ,CAACE,IAAI,GAAG,QAAS,eAC3D,IAAI,CAACX,mBACN,IAAG,IAAI,CAACF,KAAK,CAACU,MAAO,OAAM;EAC9B;EAEAN,OAAOA,CAACS,IAAY,EAAE;IACpB,IAAI,CAACb,KAAK,CAACc,IAAI,CAAC;MACdD,IAAI,EAAEA,IAAI;MACVJ,SAAS,EAAE,KAAK;MAChBM,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ;AACF;AACA,eAAe,IAAIjB,SAAS,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}